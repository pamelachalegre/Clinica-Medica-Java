/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interfaces;

import Dados.Consulta;
import Funcionarios.CadastroMedico;
import Funcionarios.Medico;
import Funcionarios.Secretaria;
import java.util.ArrayList;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.swing.JOptionPane;

/**
 *
 * @author home
 */
public class MenuPrincipal extends javax.swing.JFrame {
    EntityManager em;
    /**
     * Creates new form MenuPrincipal
     * @param em
     */
    public MenuPrincipal(EntityManager em) {
        initComponents();
        setSize(540, 300);
        setLocationRelativeTo(null);
        getContentPane().setBackground(java.awt.Color.white);
        this.em = em; //traz o gerenciador de entidades
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Clinica Medica");
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(165, 107, 255));
        jButton1.setText("SECRETÁRIA");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSecretaria(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 150, 70));

        jButton2.setBackground(new java.awt.Color(107, 211, 255));
        jButton2.setText("MÉDICO");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acharMedico(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 130, 150, 70));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Selecione o tipo de usuário:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 40, 180, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuSecretaria(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSecretaria
        // Se o usuário escolher o modo secretária, ele será direcionado ao menu da secretária.
        String nome = JOptionPane.showInputDialog(null, "Insira o usuário:", "Identificação",JOptionPane.QUESTION_MESSAGE);
        
        if ("MARIA GABRIELA".equals(nome.toUpperCase())) { // Se o nome da secretária estiver correto:
            dispose(); //A tela do menu principal é invisibilizada
            Secretaria sec = new Secretaria(em);
            new MenuSecretaria(sec, em).setVisible(true); // A tela do menu da secreetária passa a ser a visível
        } else { // Se não:
            JOptionPane.showMessageDialog(null, "Usuário desconhecido!", "Identificação", JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_menuSecretaria

    private void acharMedico(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acharMedico
        /*
        Recupera o objeto CadastroMedico correto do Banco de Dados e instancia o médico correto para ações.
        */
        String crm = JOptionPane.showInputDialog(null, "Insira seu CRM:", "Identificação",JOptionPane.QUESTION_MESSAGE);
        
        Query query = em.createQuery(("select m FROM CadastroMedico m WHERE m.crm LIKE \'" + crm + "\'"));
        List<CadastroMedico> medico = query.getResultList();
        
        CadastroMedico certo = medico.get(0);
        if (certo.getCrm().equals(crm)) { // Buscar o CRM no banco de dados -> se encontrar:
            dispose();
            Medico med = new Medico(certo.getNome(), certo.getCrm(), certo.getCpf(), certo.getSalario(), certo.getAtendimentos(), em);
            new MenuMedico(med, em).setVisible(true); //vai ao menu de médicos
        } else {// Se não:
            JOptionPane.showMessageDialog(null, "Usuário desconhecido! CRM inválido.", "Identificação", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_acharMedico


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
